<!--! For copyright / license terms, see COPYRIGHT.rst (top level of repository)
      Repository: https://github.com/C3S/portal_web -->


<!--!

    Macro 'navbar': Bootstrap `navbar`_ element.

    Menue items are fetched from the registry and are expected to contain the
    following information::

        {
            'name': str,
            'url': str
        }

    Menue items are active, if the request path (full url) starts with the
    menue url.

    Args:
        name (str): Sets css class to cs-menue-NAME.
            Uses menue items from registry: menues/NAME/*.
        style (Optional[str]): Adds css classes, e.G.
            navbar-default, navbar-fixed-top, navbar-stacked.

    Slots:
        links: Rendering of menue items.

    .. _navbar:
       https://getbootstrap.com/components/#navbar

-->
<nav metal:define-macro="navbar"
     tal:condition="context.registry['menues'][name]|None"
     class="cs-menue-${name} navbar navbar-default ${style|None}"
     i18n:domain="portal_web">

    <div tal:omit-tag="not 'navbar-fixed-top' in style | True"
         class="container">
        <div tal:omit-tag="not 'navbar-fixed-top' in style | True"
             class="col-md-6 col-md-offset-3">

            <div class="navbar-header">
                <button type="button" class="navbar-toggle collapsed"
                        data-toggle="collapse" data-target=".cs-menue-${name}-collapse">
                    <span class="sr-only" i18n:translate="">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
            </div>

            <div class="cs-menue-${name}-collapse collapse navbar-collapse">
                <ul class="nav navbar-nav">
                    <li tal:repeat="menu context.registry['menues'][name]"
                        tal:attributes="class 'active' if request.path.startswith(menu.url) else None | None">

                        <!-- slot: links -->
                        <a metal:define-slot="links"
                           tal:attributes="href menu.url">${menu.name}</a>

                    </li>
                </ul>
            </div>

        </div>
    </div>

</nav>


<!--!

    Macro 'nav': Bootstrap `nav`_ element.

    Menue items are fetched from the registry and are expected to contain the
    following information::

        {
            'name': str,
            'url': str
        }

    Menue items are active, if the request path (full url) starts with the
    menue url.

    Args:
        name (str): Sets css class to cs-menue-NAME.
            Uses menue items from registry: menues/NAME/*.
        style (Optional[str]): Adds css classes, e.G. nav-tabs, nav-justified.

    Slots:
        links: Rendering of menue items.

    .. _nav:
       https://getbootstrap.com/components/#nav

-->
<ul metal:define-macro="nav"
    tal:condition="context.registry['menues'][name]|None"
    class="cs-menue-${name} nav ${style}"
    i18n:domain="portal_web">

    <li tal:repeat="menu context.registry['menues'][name]" role="presentation"
        tal:attributes="class 'active' if request.path.startswith(menu.url) else None">

        <!-- slot: links -->
        <a metal:define-slot="links"
           tal:attributes="href menu.url">${menu.name}</a>

    </li>

</ul>


<!--!

    Macro 'panel': Bootstrap `panel`_ element.

    Args:
        heading (Optional[str]): Content of panel heading.
        body (Optional[str]): Content of panel body.
        footer (Optional[str]): Content of panel footer.
        style (Optional[str]): Adds css classes.

    Slots:
        heading: Rendering of panel heading.
        body: Rendering of panel body.
        footer: Rendering of panel footer.

    .. _panel:
       https://getbootstrap.com/components/#panels

-->
<div metal:define-macro="panel"
     class="panel panel-default ${style|None}"
     i18n:domain="portal_web">
    <div tal:condition="heading|False" class="panel-heading">
        <h4 tal:omit-tag="not title | True" class="panel-title">
            <tal:block metal:define-slot="heading">${heading}</tal:block>
        </h4>
    </div>
    <div tal:condition="body|False" class="panel-body">
        <tal:block metal:define-slot="body">${body}</tal:block>
    </div>
    <div tal:condition="footer|False" class="panel-footer">
        <tal:block metal:define-slot="footer">${footer}</tal:block>
    </div>
</div>


<!--!

    Macro 'panel-collapsed': Customized, collapsable `panel`_ element.

    Args:
        group (str): Panel group name for unique css ids.
        id (int): Panel id for unique css ids.
        heading (Optional[str]): content of panel heading.
        body (Optional[str]): content of panel body.
        footer (Optional[str]): content of panel footer.
        style (Optional[str]): Adds css classes.
        visible (bool): Starting state of collapse (default: False).

    Slots:
        heading: rendering of panel heading.
        body: rendering of panel body.
        footer: rendering of panel footer.

    .. _panel:
       https://getbootstrap.com/components/#panels

-->
<div metal:define-macro="panel-collapsed"
     tal:define="visible visible|False"
     class="panel panel-default panel-collapsed ${style|None}"
     i18n:domain="portal_web">
    <div class="panel-heading">
        <h4 class="panel-title">
            <a data-toggle="collapse" data-target="#cs-panel-${group}-${id}"
               href="#${group}-${id}">
               <tal:block metal:define-slot="heading">${heading}</tal:block>
            </a>
        </h4>
    </div>
    <div id="cs-panel-${group}-${id}" class="panel-collapse collapse ${'in' if visible else None}">
        <div class="panel-body">
            <tal:block metal:define-slot="body">${body}</tal:block>
        </div>
        <div tal:condition="footer|False" class="panel-footer">
            <tal:block metal:define-slot="footer">${footer}</tal:block>
        </div>
    </div>
</div>
